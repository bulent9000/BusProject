<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>